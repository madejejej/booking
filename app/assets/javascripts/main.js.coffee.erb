#= require_self
#= require_tree ./modules
#= require_tree ./services/main
#= require_tree ./controllers/main
#= require_tree ./directives/main
#= require_tree ./filters/main


@App = angular.module('App', ['App.services','App.controllers','ngRoute'])

@App.config ($httpProvider, $routeProvider, $locationProvider) ->
  $httpProvider.interceptors.push('httpRequestInterceptor')
  $locationProvider.html5Mode(true)
  $routeProvider
    .when "/",
      templateUrl: "<%= asset_path("home.html") %>"
    .when "/404",
      templateUrl: "<%= asset_path("404.html") %>"
    .when "/login",
      templateUrl: "<%= asset_path("login.html") %>"
      controller: 'LoginController'
    .when "/register",
      templateUrl: "<%= asset_path("register.html") %>"
      controller: 'LoginController'
    .when "/movies",
      templateUrl: "<%= asset_path("movies/index.html.slim") %>"
      controller: 'MoviesListingController'
    .when "/movies/:movie_id/shows",
      templateUrl: "<%= asset_path("movies/shows.html") %>"
      controller: 'ShowsListingController'
    .when "/movies/:movie_id",
      templateUrl: "<%= asset_path("movies/show.html") %>"
      controller: 'MovieController'
    .when "/cinemas/:cinema_id/screens",
      templateUrl: "<%= asset_path("cinemas/screens/index.html.slim") %>"
      controller: 'ScreenListingController'
    .when "/cinemas",
      templateUrl: "<%= asset_path("cinemas/list.html") %>"
      controller: 'CinemasListingController'
    .when "/cinemas/new",
      templateUrl: "<%= asset_path("cinemas/new.html") %>"
      controller: 'CinemaController'
    .when "/cinemas/:cinema_id",
      templateUrl: "<%= asset_path("cinemas/show.html") %>"
      controller: 'CinemaShowController'
    .when "/cinemas/update/:cinema_id",
      templateUrl: "<%= asset_path("cinemas/update.html") %>"
      controller: 'CinemaUpdateController',
    .when "/cinemas/:cinema_id/screens/:screen_id/seats",
      templateUrl: "<%= asset_path("cinemas/screens/seats/index.html.slim") %>"
      controller: 'SeatEditingController'
@App.config [
    "$httpProvider"
    ($httpProvider) ->
        $httpProvider.defaults.headers.common["X-CSRF-Token"] = $("meta[name=csrf-token]").attr("content")
]
